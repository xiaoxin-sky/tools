window.SIDEBAR_ITEMS = {"enum":[["LogCategory","The category for a log advice, defines how the message should be presented to the user."]],"struct":[["CodeFrameAdvice","Utility type implementing [Advices] that emits a single code frame advice with the provided path, span and source code."],["CodeSuggestionAdvice","Utility type implementing [Advices] that emits a code suggestion with the provided text"],["CommandAdvice","Utility type implementing [Advices] that emits a command advice with the provided text."],["DiffAdvice","Utility type implementing [Advices] that emits a diff advice with the provided prev and next text."],["LogAdvice","Utility type implementing [Advices] that emits a single log advice with the provided category and text."]],"trait":[["Advices","Trait implemented by types that support emitting advices into a diagnostic"],["Visit","The `Visit` trait is used to collect advices from a diagnostic: a visitor instance is provided to the Diagnostic::advices and Diagnostic::verbose_advices methods, and the diagnostic implementation is expected to call into the various `record_*` methods to communicate advices to the user."]]};